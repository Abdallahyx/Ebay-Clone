{"version":3,"file":"squircle.js","sources":["../../temp-ts-out/elements/squircle.js"],"sourcesContent":["import scaleD from '../lib/scaleD.js';\nimport Base from '../lib/LdrsBaseElement.js';\nimport styles from './squircle.scss';\nclass Squircle extends Base {\n    _attributes = [\n        'size',\n        'color',\n        'speed',\n        'stroke',\n        'stroke-length',\n        'bg-opacity',\n    ];\n    size;\n    color;\n    speed;\n    stroke;\n    'stroke-length';\n    'bg-opacity';\n    d;\n    static get observedAttributes() {\n        return ['size', 'color', 'speed', 'stroke', 'stroke-length', 'bg-opacity'];\n    }\n    constructor() {\n        super();\n        this.storePropsToUpgrade(this._attributes);\n        this.reflect(this._attributes);\n        this.d =\n            'M0.5,25C0.5,7.8,7.8,0.5,25,0.5S49.5,7.8,49.5,25S42.2,49.5,25,49.5S0.5,42.2,0.5,25';\n    }\n    connectedCallback() {\n        this.upgradeStoredProps();\n        this.applyDefaultProps({\n            size: 37,\n            color: 'black',\n            stroke: 5,\n            'stroke-length': 0.15,\n            speed: 0.9,\n            'bg-opacity': 0.1,\n        });\n        const scaledD = scaleD(parseInt(this.size) / 50, this.d);\n        this.template.innerHTML = `\n      <svg\n        class=\"container\" \n        x=\"0px\" \n        y=\"0px\"\n        viewBox=\"0 0 ${this.size} ${this.size}\"\n        height=\"${this.size}\"\n        width=\"${this.size}\"\n        preserveAspectRatio='xMidYMid meet'\n      >\n        <path\n          class=\"track\" \n          fill=\"none\" \n          stroke-width=\"${this.stroke}\" \n          pathlength=\"100\"\n          d=\"${scaledD}\"\n        />\n\n        <path\n          class=\"car\" \n          fill=\"none\" \n          stroke-width=\"${this.stroke}\" \n          pathlength=\"100\"\n          d=\"${scaledD}\"\n        />\n      </svg>\n      <style>\n        :host{\n          --uib-size: ${this.size}px;\n          --uib-color: ${this.color};\n          --uib-speed: ${this.speed}s;\n          --uib-dash: ${parseFloat(this['stroke-length']) * 100};\n          --uib-gap: ${100 - parseFloat(this['stroke-length']) * 100};\n          --uib-bg-opacity: ${this['bg-opacity']};\n        }\n        ${styles}\n      </style>\n    `;\n        this.shadow.replaceChildren(this.template.content.cloneNode(true));\n    }\n    attributeChangedCallback() {\n        const styleEl = this.shadow.querySelector('style');\n        const svgEl = this.shadow.querySelector('svg');\n        const pathEls = this.shadow.querySelectorAll('path');\n        if (!styleEl)\n            return;\n        svgEl.setAttribute('height', this.size);\n        svgEl.setAttribute('width', this.size);\n        svgEl.setAttribute('viewBox', `0 0 ${this.size} ${this.size}`);\n        pathEls.forEach((pathEl) => {\n            pathEl.setAttribute('stroke-width', this.stroke);\n            pathEl.setAttribute('d', scaleD(parseInt(this.size) / 50, this.d));\n        });\n        styleEl.innerHTML = `\n      :host{\n        --uib-size: ${this.size}px;\n        --uib-color: ${this.color};\n        --uib-speed: ${this.speed}s;\n        --uib-dash: ${parseFloat(this['stroke-length']) * 100};\n        --uib-gap: ${100 - parseFloat(this['stroke-length']) * 100};\n        --uib-bg-opacity: ${this['bg-opacity']};\n      }\n      ${styles}\n    `;\n    }\n}\nexport default {\n    register: (name = 'l-squircle') => {\n        if (!customElements.get(name)) {\n            customElements.define(name, class extends Squircle {\n            });\n        }\n    },\n    element: Squircle,\n};\n"],"names":["Squircle","Base","_attributes","size","color","speed","stroke","d","observedAttributes","constructor","super","this","storePropsToUpgrade","reflect","connectedCallback","upgradeStoredProps","applyDefaultProps","scaledD","scaleD","parseInt","template","innerHTML","parseFloat","styles","shadow","replaceChildren","content","cloneNode","attributeChangedCallback","styleEl","querySelector","svgEl","pathEls","querySelectorAll","setAttribute","forEach","pathEl","squircle","register","name","customElements","get","define","element"],"mappings":"wtBAGA,MAAMA,UAAiBC,EACnBC,YAAc,CACV,OACA,QACA,QACA,SACA,gBACA,cAEJC,KACAC,MACAC,MACAC,OACA,gBACA,aACAC,EACWC,gCACP,MAAO,CAAC,OAAQ,QAAS,QAAS,SAAU,gBAAiB,aAChE,CACDC,cACIC,QACAC,KAAKC,oBAAoBD,KAAKT,aAC9BS,KAAKE,QAAQF,KAAKT,aAClBS,KAAKJ,EACD,mFACP,CACDO,oBACIH,KAAKI,qBACLJ,KAAKK,kBAAkB,CACnBb,KAAM,GACNC,MAAO,QACPE,OAAQ,EACR,gBAAiB,IACjBD,MAAO,GACP,aAAc,KAElB,MAAMY,EAAUC,EAAOC,SAASR,KAAKR,MAAQ,GAAIQ,KAAKJ,GACtDI,KAAKS,SAASC,UAAY,qGAKXV,KAAKR,QAAQQ,KAAKR,0BACvBQ,KAAKR,yBACNQ,KAAKR,yJAMIQ,KAAKL,sDAEhBW,4GAMWN,KAAKL,sDAEhBW,sFAKSN,KAAKR,mCACJQ,KAAKP,kCACLO,KAAKN,kCAC8B,IAApCiB,WAAWX,KAAK,4CACjB,IAA0C,IAApCW,WAAWX,KAAK,mDACfA,KAAK,sCAEzBY,0BAGFZ,KAAKa,OAAOC,gBAAgBd,KAAKS,SAASM,QAAQC,WAAU,GAC/D,CACDC,2BACI,MAAMC,EAAUlB,KAAKa,OAAOM,cAAc,SACpCC,EAAQpB,KAAKa,OAAOM,cAAc,OAClCE,EAAUrB,KAAKa,OAAOS,iBAAiB,QACxCJ,IAELE,EAAMG,aAAa,SAAUvB,KAAKR,MAClC4B,EAAMG,aAAa,QAASvB,KAAKR,MACjC4B,EAAMG,aAAa,UAAW,OAAOvB,KAAKR,QAAQQ,KAAKR,QACvD6B,EAAQG,SAASC,IACbA,EAAOF,aAAa,eAAgBvB,KAAKL,QACzC8B,EAAOF,aAAa,IAAKhB,EAAOC,SAASR,KAAKR,MAAQ,GAAIQ,KAAKJ,GAAG,IAEtEsB,EAAQR,UAAY,uCAENV,KAAKR,iCACJQ,KAAKP,gCACLO,KAAKN,gCAC8B,IAApCiB,WAAWX,KAAK,0CACjB,IAA0C,IAApCW,WAAWX,KAAK,iDACfA,KAAK,kCAEzBY,UAEH,EAEL,IAAec,EAAA,CACXC,SAAU,CAACC,EAAO,gBACTC,eAAeC,IAAIF,IACpBC,eAAeE,OAAOH,EAAM,cAAcvC,IAE7C,EAEL2C,QAAS3C"}